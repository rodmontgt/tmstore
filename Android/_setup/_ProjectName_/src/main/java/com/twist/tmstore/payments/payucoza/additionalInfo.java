package com.twist.tmstore.payments.payucoza;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.5
//
// Date Of Creation: 7/4/2014 4:34:18 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class additionalInfo implements KvmSerializable {

    public String callCenterRepId;
    public String cancelUrl;
    public String demoMode;
    public String deviceId;
    public String devicePlatform;
    public String locale;
    public String merchantReference;
    public String notificationUrl;
    public String payUReference;
    public String redirectChannel;
    public String returnUrlField;
    public String secure3d;
    public String showBudget;
    public String storePaymentMethod;
    public String supportedPaymentMethods;
    public String traceReference;
    public String transactionalCode;
    public String transactionalMessage;
    public String transactionalStatus;

    //for payu to be happy
    public boolean isGetTransaction = false;

    public additionalInfo() {
    }

    public additionalInfo(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("callCenterRepId")) {
            Object obj = soapObject.getProperty("callCenterRepId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                callCenterRepId = j.toString();
            } else if (obj != null && obj instanceof String) {
                callCenterRepId = (String) obj;
            }
        }
        if (soapObject.hasProperty("cancelUrl")) {
            Object obj = soapObject.getProperty("cancelUrl");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                cancelUrl = j.toString();
            } else if (obj != null && obj instanceof String) {
                cancelUrl = (String) obj;
            }
        }
        if (soapObject.hasProperty("demoMode")) {
            Object obj = soapObject.getProperty("demoMode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                demoMode = j.toString();
            } else if (obj != null && obj instanceof String) {
                demoMode = (String) obj;
            }
        }
        if (soapObject.hasProperty("deviceId")) {
            Object obj = soapObject.getProperty("deviceId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                deviceId = j.toString();
            } else if (obj != null && obj instanceof String) {
                deviceId = (String) obj;
            }
        }
        if (soapObject.hasProperty("devicePlatform")) {
            Object obj = soapObject.getProperty("devicePlatform");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                devicePlatform = j.toString();
            } else if (obj != null && obj instanceof String) {
                devicePlatform = (String) obj;
            }
        }
        if (soapObject.hasProperty("locale")) {
            Object obj = soapObject.getProperty("locale");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                locale = j.toString();
            } else if (obj != null && obj instanceof String) {
                locale = (String) obj;
            }
        }
        if (soapObject.hasProperty("merchantReference")) {
            Object obj = soapObject.getProperty("merchantReference");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                merchantReference = j.toString();
            } else if (obj != null && obj instanceof String) {
                merchantReference = (String) obj;
            }
        }
        if (soapObject.hasProperty("notificationUrl")) {
            Object obj = soapObject.getProperty("notificationUrl");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                notificationUrl = j.toString();
            } else if (obj != null && obj instanceof String) {
                notificationUrl = (String) obj;
            }
        }
        if (soapObject.hasProperty("payUReference")) {
            Object obj = soapObject.getProperty("payUReference");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                payUReference = j.toString();
            } else if (obj != null && obj instanceof String) {
                payUReference = (String) obj;
            }
        }
        if (soapObject.hasProperty("redirectChannel")) {
            Object obj = soapObject.getProperty("redirectChannel");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                redirectChannel = j.toString();
            } else if (obj != null && obj instanceof String) {
                redirectChannel = (String) obj;
            }
        }
        if (soapObject.hasProperty("returnUrl")) {
            Object obj = soapObject.getProperty("returnUrl");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                returnUrlField = j.toString();
            } else if (obj != null && obj instanceof String) {
                returnUrlField = (String) obj;
            }
        }
        if (soapObject.hasProperty("secure3d")) {
            Object obj = soapObject.getProperty("secure3d");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                secure3d = j.toString();
            } else if (obj != null && obj instanceof String) {
                secure3d = (String) obj;
            }
        }
        if (soapObject.hasProperty("showBudget")) {
            Object obj = soapObject.getProperty("showBudget");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                showBudget = j.toString();
            } else if (obj != null && obj instanceof String) {
                showBudget = (String) obj;
            }
        }
        if (soapObject.hasProperty("storePaymentMethod")) {
            Object obj = soapObject.getProperty("storePaymentMethod");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                storePaymentMethod = j.toString();
            } else if (obj != null && obj instanceof String) {
                storePaymentMethod = (String) obj;
            }
        }
        if (soapObject.hasProperty("supportedPaymentMethods")) {
            Object obj = soapObject.getProperty("supportedPaymentMethods");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                supportedPaymentMethods = j.toString();
            } else if (obj != null && obj instanceof String) {
                supportedPaymentMethods = (String) obj;
            }
        }
        if (soapObject.hasProperty("traceReference")) {
            Object obj = soapObject.getProperty("traceReference");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                traceReference = j.toString();
            } else if (obj != null && obj instanceof String) {
                traceReference = (String) obj;
            }
        }
        if (soapObject.hasProperty("transactionalCode")) {
            Object obj = soapObject.getProperty("transactionalCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                transactionalCode = j.toString();
            } else if (obj != null && obj instanceof String) {
                transactionalCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("transactionalMessage")) {
            Object obj = soapObject.getProperty("transactionalMessage");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                transactionalMessage = j.toString();
            } else if (obj != null && obj instanceof String) {
                transactionalMessage = (String) obj;
            }
        }
        if (soapObject.hasProperty("transactionalStatus")) {
            Object obj = soapObject.getProperty("transactionalStatus");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                transactionalStatus = j.toString();
            } else if (obj != null && obj instanceof String) {
                transactionalStatus = (String) obj;
            }
        }
    }

    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return callCenterRepId;
            case 1:
                return cancelUrl;
            case 2:
                return demoMode;
            case 3:
                return deviceId;
            case 4:
                return devicePlatform;
            case 5:
                return locale;
            case 6:
                if (isGetTransaction)
                    return demoMode;
                else
                    return merchantReference;
            case 7:
                return notificationUrl;
            case 8:
                return payUReference;
            case 9:
                return redirectChannel;
            case 10:
                return returnUrlField;
            case 11:
                return secure3d;
            case 12:
                return showBudget;
            case 13:
                return storePaymentMethod;
            case 14:
                return supportedPaymentMethods;
            case 15:
                return traceReference;
            case 16:
                return transactionalCode;
            case 17:
                return transactionalMessage;
            case 18:
                return transactionalStatus;
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 19;
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "callCenterRepId";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "cancelUrl";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "demoMode";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "deviceId";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "devicePlatform";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "locale";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                if (isGetTransaction)
                    info.name = "demoMode";
                else
                    info.name = "merchantReference";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "notificationUrl";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "payUReference";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "redirectChannel";
                break;
            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "returnUrl";
                break;
            case 11:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "secure3d";
                break;
            case 12:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "showBudget";
                break;
            case 13:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "storePaymentMethod";
                break;
            case 14:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "supportedPaymentMethods";
                break;
            case 15:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "traceReference";
                break;
            case 16:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "transactionalCode";
                break;
            case 17:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "transactionalMessage";
                break;
            case 18:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "transactionalStatus";
                break;
        }
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

}
