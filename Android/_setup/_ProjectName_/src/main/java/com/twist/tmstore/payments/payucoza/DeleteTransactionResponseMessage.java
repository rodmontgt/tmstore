package com.twist.tmstore.payments.payucoza;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.5
//
// Date Of Creation: 7/4/2014 4:34:19 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class DeleteTransactionResponseMessage implements KvmSerializable {

    public VectorcustomField customFields;
    public String displayMessage;
    public String merchantReference;
    public String payUReference;
    public String pointOfFailure;
    public String requestTrace;
    public String resultCode;
    public String resultMessage;
    public String stage;
    public boolean successful;

    public DeleteTransactionResponseMessage() {
    }

    public DeleteTransactionResponseMessage(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("customFields")) {
            SoapObject j = (SoapObject) soapObject.getProperty("customFields");
            customFields = new VectorcustomField(j);
        }
        if (soapObject.hasProperty("displayMessage")) {
            Object obj = soapObject.getProperty("displayMessage");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                displayMessage = j.toString();
            } else if (obj != null && obj instanceof String) {
                displayMessage = (String) obj;
            }
        }
        if (soapObject.hasProperty("merchantReference")) {
            Object obj = soapObject.getProperty("merchantReference");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                merchantReference = j.toString();
            } else if (obj != null && obj instanceof String) {
                merchantReference = (String) obj;
            }
        }
        if (soapObject.hasProperty("payUReference")) {
            Object obj = soapObject.getProperty("payUReference");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                payUReference = j.toString();
            } else if (obj != null && obj instanceof String) {
                payUReference = (String) obj;
            }
        }
        if (soapObject.hasProperty("pointOfFailure")) {
            Object obj = soapObject.getProperty("pointOfFailure");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                pointOfFailure = j.toString();
            } else if (obj != null && obj instanceof String) {
                pointOfFailure = (String) obj;
            }
        }
        if (soapObject.hasProperty("requestTrace")) {
            Object obj = soapObject.getProperty("requestTrace");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                requestTrace = j.toString();
            } else if (obj != null && obj instanceof String) {
                requestTrace = (String) obj;
            }
        }
        if (soapObject.hasProperty("resultCode")) {
            Object obj = soapObject.getProperty("resultCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                resultCode = j.toString();
            } else if (obj != null && obj instanceof String) {
                resultCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("resultMessage")) {
            Object obj = soapObject.getProperty("resultMessage");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                resultMessage = j.toString();
            } else if (obj != null && obj instanceof String) {
                resultMessage = (String) obj;
            }
        }
        if (soapObject.hasProperty("stage")) {
            Object obj = soapObject.getProperty("stage");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                stage = j.toString();
            } else if (obj != null && obj instanceof String) {
                stage = (String) obj;
            }
        }
        if (soapObject.hasProperty("successful")) {
            Object obj = soapObject.getProperty("successful");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                successful = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                successful = (Boolean) obj;
            }
        }
    }

    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return customFields;
            case 1:
                return displayMessage;
            case 2:
                return merchantReference;
            case 3:
                return payUReference;
            case 4:
                return pointOfFailure;
            case 5:
                return requestTrace;
            case 6:
                return resultCode;
            case 7:
                return resultMessage;
            case 8:
                return stage;
            case 9:
                return successful;
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 10;
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "customFields";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "displayMessage";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "merchantReference";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "payUReference";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "pointOfFailure";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "requestTrace";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "resultCode";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "resultMessage";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "stage";
                break;
            case 9:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "successful";
                break;
        }
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

}
